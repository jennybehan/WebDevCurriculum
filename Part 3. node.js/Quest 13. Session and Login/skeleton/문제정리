[Client]

- 문제상황: 탭 별로 상태를 관리하는 코드 만들기 실패
- 첫번째 코드구조: Notepad, Memo, List
    - Notepad: Memo와 List를 초기화 하는 역할만 수행
    - Memo: 메모장에 적힌 DOM 정보를 가져와서 ajax로 저장하는 역할만 수행함(POST)
    - List: 
        - 메모들이 모두 저장된 디렉토리인 memo에서 파일 정보를 모두 가져 옴(GET) 
        - 해당 ajax 메서드 안에서 탭 역할을 하는 메모 제목을 map 메서드로 집어넣어 줌.
        - 여기서 onclick으로 해당 제목의 메모를 로드하는 메서드를 연결해 줌
            - 비동기로 여러 탭을 한꺼번에 불러온다는 것에 맞지만 뭔가 찝찝함이 있었음.
            - onclick 자체 보다는 `데이터를 어디서 관리하는지`에 대한 찝찝함이었던 것 같다.
        - 제목을 로드하는 메서드에서 파일 이름으로 정보를 가져오는 작업을 수행(GET)
    - Refactoring point
        - 첫번째 코드구조에서 List에서 모든 정보를 가져와서 Memo에 넣어주는 작업에 대한 찝찝함
        - List와 Memo는 다른 컴포넌트인데 왜 의존되어 있지? 라고 생각하고 막연하게 이를 해결해야 한다고 생각함.
        - 피드백으로 받은 내용 중 Tab으로 상태관리 하는 것을 추가해야 하므로 Tab에 대한 정보를 관리하는 클래스가 필요하다고 생각함.

- 두번째 코드구조: Notepad, TabList, Tab, Memo
    - Tab과 Memo가 자신의 정보를 각각 컨트롤 할 수 있어야 한다고 생각했음
        - 추후에 서로 그런 의존성을 가지면 안되지 않나 싶어서(??) 분리해야 한다고 생각하게 되었음
    - Notepad는 초기화 하는 역할만 담당하는데 차라리 정보를 모두 여기서 가져오고 각 Tab과 Memo는 데이터를 받아와서 보여주기만 하면 어떨까 생각함(React 방식)
    - Tab은 제목과 어떤 memo를 불러올지(일종의 id 값)만 알면 된다.
    - Memo는 어떤 memo를 불러올지(일종의 id 값)과 텍스트 내용만 알면 된다.
    - 그래서 TabList가 모든 정보를 가져오게 하고 각각의 아이템을 선택했을 때 Tab 클래스를 만들고(new Tab)현재 상태를 체크하게 했다.
    - Memo에서는 내용변경이 일어나면 위의 현재 상태(처음 로드했을 때의 기존 데이터)가 아니라 새로운 상태를 체크할 수 있게 했다.
        - 이전 데이터는 로드만, 새로운 데이터는 저장을 하려고 했음 -> 실패(서로 다르게 들어올 줄 알았는데 동일하게 들어옴..ㅠㅠ 왜인지는 아직도 파악 안됨)
    - 메모들을 모두 GET 해와서 list Item으로 붙이고 click했을 때 콜백으로 object화 했음 -> 불필요한 방식
    * 그래서 Tab, Memo가 정보를 어떻게 관리해야 할 지 정확히 파악을 하지 못함.
    * GET, POST 등을 어떤 컴포넌트에서 어떻게 할 지 파악해서 짜야 함.

- 세번째 코드구조: Notepad only
    - 위와 같이 현재 상태를 detect 하는 게 어렵다고 판단했고 인터넷을 통해 여러 코드들을 보던 와중 이렇게 클래스를 굳이 나눠서 할 필요가 있나라는 생각을 하게 됨.
    - 그냥 각각의 메서드 안에서 GET, POST 등을 함(saveMemo, getMemoData 등)
        - 이를 통해 Notepad 안에서 전역적(?)으로 데이터가 공유될 수 있다고 생각함(맞는 생각인지 알 수 없는 모호한 상태에서 진행함..)
    - `getMemoData`
        - 모든 데이터가 담긴 배열을 가져와서 map으로 돌린 뒤 그 안에서 `getTabList`메서드를 호출. 
        - memo 데이터를 파라미터로 넘김.
        - memo 하나하나 당 Tab이 만들어지는 거니 메서드명은 `getTabItem`이 차라리 맞았을 듯
    - `getTabList`
        - 여기서는 list에 해당하는 DOM 엘리먼트를 만들고 ul에 붙이는 등의 작업을 함
        - 그런 뒤 받아온 memo 데이터를 textContent로 집어넣고
            - 이 작업 또한 맞는 지 계속 헷갈리는 채로 진행했음: 텍스트 자체를 식별자 id 처럼 써도 되는가에 대하여
        - 각각의 tabItem에 onclick을 연결해 비동기로 `setMemoData`를 실행하고 memo 데이터를 또 넘김
            - tabItem에 addEventListener로 연결하면 왜 안되는지 모름 -> 비동기에 대한 이해가 아직 부족함
    - `setMemoData`
        - 받아온 memo를 DOM value로 집어넣음. 
            - value와 textContent는 또 어떻게 다른가..? textContent로 안되어서 value로 접근한건데 왜 안되고 두개 차이는 뭔지 안찾아봄.
        - `saveMemo`를 넣어서 각 tabItem을 클릭하면 아예 저장이 되어버리게 할 수 있나 생각함..
    - `saveMemo`
        - 받아온 memo를 object 형태로 만든 뒤 JSON.stringify에 집어넣어서 넘김
        - window.location.reload()로 새로고침 함 -> 저장하면 바로 list에 반영되면서 값을 비워주면 좋겠다고 생각했으나..
    - `makeNewMemo`
        - 새 메모 버튼을 누르면 DOM 내용을 모두 비운다.
        - 이 메서드와 `saveMemo` 메서드가 동시에 실행됨

[ISSUES]

0. 근본적인 문제
- 해결해야 하는 문제를 명확하게 파악하지 못함
- 그런 상태에서 문제를 해결하는 게 아니라 일단 work 하게만 하다보니 문제가 해결되어도 그때그때 파악이 제대로 되지 않음
- 그러다가 계속 꼬이면 처음부터 다시 하고 싶어짐..
- 하나씩 쪼개서 구현하는 것과 전체적인 구조를 이해하고 설계하는 것의 병행이 잘 되지 않음.
- 구현을 위한 개별적인 내용들에 대한 이해(ex. 콜백, 비동기 등) 부족

-> 얼른 해결하고 싶어하는 급한 마음을 먹는 대신 문제를 쪼개고 구체화 해서 천천히 찾아보자

1. 어디서 memo 디렉토리 내 데이터를 불러올 것인가?
- 이건 사실 어떤 범위에서 데이터를 로드/조작할 것인가?의 문제
    - 전역에서 불러오되 조작은 각각의 컴포넌트에서 해야 함(memo에서 로드/저장하고, tab에서 로드 등)
- 이걸 어떻게 구현하지?
    - Notepad constructor에서(? 단계에서?) data를 로드한다.
    - tab을 선택하는 메서드 -> id를 불러온다 -> id로 memo에 tab 정보를 넘긴다 -> memo를 로드한다.
    - 선택된 tab의 무엇을 알아야 하느냐면 id를 알아야 함.. 
    - 따라서 tab id의 여부를 확인하고,
        - tab id를 넘겨서 memo를 받아온다.
        - 선택된 tab id가 없는 경우 저장한다.
    - data를 로드하는 콜백 안에서 tab에 정보를 넘기고 memo를 생성한다.
    - tab과 memo 각각이 하는 역할을 메서드로 연결한다. 메서드 안에 콜백함수를 전달해준다. <<

2. 어떻게 각 memo의 데이터를 Tab, Memo라는 서로 다른 컴포넌트에서 동시에 가져올 것인가?
- 선택한 tab의 정보를 tab과 memo에 각각 어떻게 넘길 것인가?
    - id를 사용: 불러온 tabList에서 현재 선택한 탭의 id와 매치하는 메서드가 필요. (어떤 방식으로 구현?)
    - 현재 선택한 탭의 id를 불러오는 메서드
- 선택한 tab의 상태를 어떻게 보존할 것인가?
    - 매번 저장, 새로로드함?

[Server]

TODO
1. path 설정 리팩토링
2. memo 디렉토리의 파일들 가져오는 메서드 정리, 이해
3. 전체적으로 코드에 Promise와 callback이 뒤섞여 있음
    > try/catch와 async/await로 바꿔보라는 피드백이 있었음.
4. session login(서버-클라이언트가 서로 정보를 어떤 방식으로 주고받는지 이해가 아직 부족)

기타: get('/memo') 같은 식이 괜찮은가 모르겠음
